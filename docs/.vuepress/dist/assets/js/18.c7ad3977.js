(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{424:function(e,t,a){"use strict";a.r(t);var l=a(2),r=Object(l.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("flex是一维布局，一次只能处理一个维度上的元素布局，一行或者一列。Flex布局可以简便、完整、响应式地实现各种页面布局。")]),e._v(" "),t("blockquote",[t("p",[e._v("注：设为Flex布局后，子元素的float、clear和vertical-align属性将失效")])]),e._v(" "),t("h1",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[e._v("#")]),e._v(" 基本概念")]),e._v(" "),t("p",[e._v("flex容器(采用flex布局的元素)存在两个轴：水平的主轴(main axis)和垂直的交叉轴(cross axis)")]),e._v(" "),t("h1",{attrs:{id:"容器的属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[e._v("#")]),e._v(" 容器的属性")]),e._v(" "),t("h2",{attrs:{id:"flex-direction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[e._v("#")]),e._v(" flex-direction")]),e._v(" "),t("p",[e._v("flex-direction 属性决定主轴的方向（即项目的排列方向）。")]),e._v(" "),t("ul",[t("li",[e._v("row(默认值)： 主轴为水平方向，起点在左端")]),e._v(" "),t("li",[e._v("row-reverse: 主轴为水平方向，起点在右端")]),e._v(" "),t("li",[e._v("column： 主轴为垂直方向，起点在上沿")]),e._v(" "),t("li",[e._v("column-reverse: 主轴为垂直方向，起点在下沿")])]),e._v(" "),t("h2",{attrs:{id:"flex-wrap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[e._v("#")]),e._v(" flex-wrap")]),e._v(" "),t("p",[e._v("flex-wrap 决定如何换行")]),e._v(" "),t("ul",[t("li",[e._v("nowrap(默认值) : 不换行")]),e._v(" "),t("li",[e._v("wrap: 换行，第一行在上方")]),e._v(" "),t("li",[e._v("wrap-reverse： 换行，第一行在下方")])]),e._v(" "),t("h2",{attrs:{id:"flex-flow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[e._v("#")]),e._v(" flex-flow")]),e._v(" "),t("p",[e._v("flex-flow 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap。(2 个属性组合)")]),e._v(" "),t("blockquote",[t("p",[e._v("flex-flow: flex-direction || flex-wrap")])]),e._v(" "),t("h2",{attrs:{id:"justify-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[e._v("#")]),e._v(" justify-content")]),e._v(" "),t("p",[e._v("justify-content属性定义了项目在主轴上的对齐方式。(默认是水平方向对齐方式，如水平居中等)")]),e._v(" "),t("ul",[t("li",[e._v("flex-start(默认值)： 左对齐")]),e._v(" "),t("li",[e._v("flex-end: 右对齐")]),e._v(" "),t("li",[e._v("center: 居中")]),e._v(" "),t("li",[e._v("space-between: 两端对齐，项目之间的间隔都相等")]),e._v(" "),t("li",[e._v("space-around: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍")])]),e._v(" "),t("h2",{attrs:{id:"align-items"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[e._v("#")]),e._v(" align-items")]),e._v(" "),t("p",[e._v("align-items属性定义项目在交叉轴上如何对齐")]),e._v(" "),t("ul",[t("li",[e._v("flex-start：交叉轴的起点对齐")]),e._v(" "),t("li",[e._v("flex-end: 交叉轴的终点对齐")]),e._v(" "),t("li",[e._v("center: 交叉轴的中点对齐")]),e._v(" "),t("li",[e._v("baseline: 项目的第一行文字的基线对齐")]),e._v(" "),t("li",[e._v("stretch(默认值): 如果项目未设置高度或设为auto，将占满整个容器的的高度")])]),e._v(" "),t("h2",{attrs:{id:"align-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[e._v("#")]),e._v(" align-content")]),e._v(" "),t("p",[e._v("align-content 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用")]),e._v(" "),t("ul",[t("li",[e._v("flex-start: 与交叉轴的起点对齐")]),e._v(" "),t("li",[e._v("flex-end: 与交叉轴的终点对齐")]),e._v(" "),t("li",[e._v("center: 与交叉轴的中点对齐")]),e._v(" "),t("li",[e._v("space-between: 与交叉轴两端对齐，轴线之间的间隔平均分布")]),e._v(" "),t("li",[e._v("space-around: 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍")]),e._v(" "),t("li",[e._v("stretch(默认值)： 轴线占满整个交叉轴")])]),e._v(" "),t("h1",{attrs:{id:"项目属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目属性"}},[e._v("#")]),e._v(" 项目属性")]),e._v(" "),t("p",[e._v("6个属性值： order、flex-grow、flex-shirk、flex-basis、flex、align-self")]),e._v(" "),t("h2",{attrs:{id:"order"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[e._v("#")]),e._v(" order")]),e._v(" "),t("ul",[t("li",[e._v("定义项目的排列顺序。数值越小，排列越靠前，默认为0")])]),e._v(" "),t("h2",{attrs:{id:"flex-grow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[e._v("#")]),e._v(" flex-grow")]),e._v(" "),t("ul",[t("li",[e._v("定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大")]),e._v(" "),t("li",[e._v("如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍")])]),e._v(" "),t("h2",{attrs:{id:"flex-shirk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-shirk"}},[e._v("#")]),e._v(" flex-shirk")]),e._v(" "),t("ul",[t("li",[e._v("定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小")]),e._v(" "),t("li",[e._v("如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。")]),e._v(" "),t("li",[e._v("负值对该属性无效。")])]),e._v(" "),t("h2",{attrs:{id:"flex-basis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[e._v("#")]),e._v(" flex-basis")]),e._v(" "),t("ul",[t("li",[e._v("定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小")])]),e._v(" "),t("blockquote",[t("p",[e._v("flex-basis: <length> | auto; /* default auto */")])]),e._v(" "),t("ul",[t("li",[e._v("它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。")])]),e._v(" "),t("h2",{attrs:{id:"flex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[e._v("#")]),e._v(" flex")]),e._v(" "),t("ul",[t("li",[e._v("flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选")])]),e._v(" "),t("blockquote",[t("p",[e._v("该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)\n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值")])]),e._v(" "),t("h2",{attrs:{id:"align-self"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[e._v("#")]),e._v(" align-self")]),e._v(" "),t("ul",[t("li",[e._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch")])]),e._v(" "),t("blockquote",[t("p",[e._v("该属性可能取6个值，除了auto，其他都与align-items属性完全一致。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);