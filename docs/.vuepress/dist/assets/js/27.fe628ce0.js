(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{437:function(t,a,e){"use strict";e.r(a);var s=e(2),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"事件冒泡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[t._v("#")]),t._v(" 事件冒泡")]),t._v(" "),a("p",[t._v("事件冒泡会从当前触发的事件目标一级一级往上传递，依次触发，直到document为止。")]),t._v(" "),a("blockquote",[a("p",[t._v("// 阻止冒泡 event.stopPropagation();")])]),t._v(" "),a("h3",{attrs:{id:"事件捕获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件捕获"}},[t._v("#")]),t._v(" 事件捕获")]),t._v(" "),a("p",[t._v("事件捕获会从document开始触发，一级一级往下传递，依次触发，直到真正事件目标为止。")]),t._v(" "),a("h3",{attrs:{id:"事件委托"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件委托"}},[t._v("#")]),t._v(" 事件委托")]),t._v(" "),a("p",[t._v("所谓的事件委托，通过监听一个父元素，来给不同的子元素绑定事件，减少监听次数，从而提升速度、")]),t._v(" "),a("p",[t._v("譬如ul嵌套li,对每个li都进行操作，每个li都写个相同的操作函数，这样会很繁琐性能也不太好。利用事件委托，就是在ul添加对li的操作，在返回的事件里找到相应操作的值，就可以实现对li的操作了")]),t._v(" "),a("h3",{attrs:{id:"ie兼容问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ie兼容问题"}},[t._v("#")]),t._v(" IE兼容问题")]),t._v(" "),a("p",[t._v("老版本的IE存在兼容问题，根本不支持addEventListener()的添加事件和removeEventListener()的删除事件，它有自己的监听方法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 添加事件，事件流固定为冒泡\nattachEvent(事件名，事件处理函数)\n// 删除事件\ndetachEvent(事件名，事件处理函数)\n")])])]),a("blockquote",[a("p",[t._v("链接 https://www.jianshu.com/p/d3e9b653fa95")])])])}),[],!1,null,null,null);a.default=r.exports}}]);