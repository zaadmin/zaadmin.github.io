(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{433:function(e,l,t){"use strict";t.r(l);var a=t(2),s=Object(a.a)({},(function(){var e=this,l=e._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h3",{attrs:{id:"数据类型"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[e._v("#")]),e._v(" 数据类型")]),e._v(" "),l("ul",[l("li",[l("p",[e._v("基本数据类型")]),e._v(" "),l("p",[e._v("Boolean, String, Number, null, undefined, Symbol")])])]),e._v(" "),l("blockquote",[l("p",[e._v("== 和 === 的比较")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("==比较，会自动转化数据类型再比较\n===比较，不会自动转化数据类型，如果数据类型不一样，返回false，如果一致，再比较\n")])])]),l("blockquote",[l("p",[e._v("不要用==比较，始终使用===比较")])]),e._v(" "),l("blockquote",[l("p",[e._v("NaN这个特殊的Number与其他所有数值都不相等，包括他自己")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("`NaN === NaN   //false`\n")])])]),l("blockquote",[l("p",[e._v("浮点数的相等比较")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[e._v("浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值\n")])])]),l("blockquote",[l("p",[e._v("null表示一个“空”的值，它和0以及空字符串''不同，0是一个数值，''表示长度为0的字符串，而null表示“空”")])]),e._v(" "),l("blockquote",[l("p",[e._v("undefined表示值未定义")])]),e._v(" "),l("ul",[l("li",[l("p",[e._v("引用数据类型")]),e._v(" "),l("p",[e._v("数组， 对象")])])])])}),[],!1,null,null,null);l.default=s.exports}}]);